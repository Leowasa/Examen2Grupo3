<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA3VJREFUeF7t2T9rU1EcxvGMDk2t4tA/dhQXF6X1NSguHQQR/NP0VTj4BtwUdElF
        EcXYKhVcRWzwLYh70qzVpm/g2lsP8gxfw7VNPOcenwc+230Ov3N/xhLScBzHcRzHcRzHcRznuJl/Nlic
        W++9m2v39ufW+0VUBzPMrve25p8Ozofx8k758mfbvV18GRGVMy20d86GMfPN4b98eAFJaPc3w5j5Jon/
        dv6k3R+GMfMNXjwhYcx8Q5dOSRgz39ClUxLGzDd06ZSEMeuXy93htaXu3mC5OyxyttQd7ixtD6+Ga6eT
        cjAaOEvbw364djrxAiKn/Fj+F0s4ePnLn/euhGunF/rDlpNwzXRDQ+ckXDPd0NA5CddMNzR0TsI10w0N
        nZNwzXRDQ+ckXDPd0NA5CddMNzR0TsI10w0NrZprb0eijqKOoo6ijqKOOrPyoDh9/WFx6saTYuZmuzh5
        63kxfftFMX3nZdG8+7pornaCN4emVjv7zVbnfXNt89/85kxDK7q0oo6ijqKOoo6ijvrbBTRbv0y1Nr6f
        WO0shtc0udDQii6tqKOoo6ijqKOoo466gGZrozT535xpaEWXVtRR1FHUUdRR1FHHWcDBp2DyvznT0Iou
        raijqKOoo6ijqKOO+QmY/B9xGlrRpRV1FHUUdRR1FHWUFwAdRR1FHUUd5QVAR1FHUUdRR9V+AXU3c3+r
        WHj0pTj36ltx4cOguPhxt7j06cdvXsCEeQGReQGReQGReQGReQGReQGR1X4B9OVHUUdRR1FHUUdRR/mb
        MHQUdRR1FHWUFwAdRR1FHUUd5QVAR1FHUUdRR3kB0FHUUdRR1FFeAHQUdRR1FHWUFwAdRR1FHUUd5QVA
        R1FHUUdRR9V+AXXnb8KReQGReQGReQGReQGReQGReQGRJb+Axr2vRc6S/yJGQ+fEC4jMC4jMC4jMC4jM
        C4jMC4is/gtYeTwadUr07Ch0RomeVdQR9f8iRpdW1CnRs6PQGSV6VlFHeAFV0RklelZRR3gBVdEZJXpW
        UUd4AVXRGSV6VlFHeAFV0RklelZRR3gBVdEZJXpWUUd4AVXRGSV6VlFH1H8BR0UvaxQ6Ywz+32/C9JJH
        oTPGwAuois4YAy+gKjpjDLyAquiMMfACqqIzxsALqIrOGAMvoCo6YwzSX4DjOI7jOI7jOI7j1DeNxk/q
        r/Bo0WgKigAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>